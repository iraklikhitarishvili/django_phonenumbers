{"name":"Django phonenumbers","tagline":"Phone number field for Django admin","body":"Installation\r\n============\r\n\r\n    run  pip install django_phonenumbers\r\n\r\nConfigure settings.py\r\n=====================\r\n\r\n    Add django_phonenumbers to INSTALLED_APPS\r\n\r\nmanage.py\r\n=========\r\n\r\n    run manage.py collectstatic\r\n\r\nsettings.py\r\n===========\r\n\r\n~~~~ {.sourceCode .python}\r\nPHONE_NUMBER_REGION = 'GE'  \r\nPHONE_NUMBERS_FORMATS_BY_REGION = {\r\n    'GE': {\r\n        'pattern': '(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})', 'format': '\\\\1 \\\\2-\\\\3-\\\\4', 'prefix_format': '+%s (%s)'\r\n    },\r\n    'US': {\r\n        'pattern': '(\\\\d{3})(\\\\d{3})(\\\\d{4})', 'format': '\\\\1 \\\\2-\\\\3', 'prefix_format': '+%s (%s)'\r\n    },\r\n}\r\n~~~~\r\n\r\n-   \"PHONE\\_NUMBER\\_REGION\" determines which country region will be\r\n    selected in admin's corresponding phone number field\r\n-   \"PHONE\\_NUMBERS\\_FORMATS\\_BY\\_REGION\" is used in\r\n    \"phone\\_number\\_format\" filter\r\n\r\nModel\r\n=====\r\n\r\n~~~~ {.sourceCode .python}\r\n#models.py\r\nclass MyModel(models.Model):\r\n    ...\r\n    phone_number = PhoneNumberField()\r\n    ...\r\n\r\n    def __str__(self):\r\n        return str(self.phone_number)\r\n~~~~\r\n\r\n**\"phone\\_number\"** field's type will be **\"PhoneNumber\"**\r\n\r\n~~~~ {.sourceCode .python}\r\nclass PhoneNumber:\r\n    def __init__(self, country_code=None, region_code=None, phone_number=None):\r\n        \"\"\"\r\n        :type country_code: str\r\n        :type region_code: str\r\n        :type phone_number: str\r\n        \"\"\"\r\n        self.country_code = country_code\r\n        self.google_phone_number = None\r\n        self.region_code = region_code\r\n        self.phone_number = phone_number\r\n~~~~\r\n\r\n\"\\_\\_str\\_\\_\" and \"\\_\\_repr\\_\\_\" functions are overridden to return\r\n\"country\\_code\"+\" \"+\"phone\\_number\"\r\n\r\n**model.fields.PhoneNumberField** is using\r\n**form.fields.PhoneNumberField** in admin by default\r\n\r\n**model.fields.PhoneNumberField** and **form.fields.PhoneNumberField**\r\nis validating and formatting(in national format) entered number\r\n\r\nTemplate example\r\n================\r\n\r\n~~~~ {.sourceCode .html}\r\n<li>\r\n            {{ number.phone_number }}\r\n            // {{ number.phone_number.region_code }}\r\n            // {{ number.phone_number.country_code }}\r\n            // {{ number.phone_number.phone_number }}\r\n            <div>\r\n                {% load phone_numbers_extra %}\r\n                <h4>Filter\r\n                    <small>{{ number.phone_number|phone_number_format }}</small>\r\n                </h4>\r\n                <h4>Simple tag\r\n                    <small>\r\n                        {% phone_number number.phone_number pattern='(\\\\d{3})(\\\\d{3})(\\\\d{3})' number_format='\\\\1 \\\\2-\\\\3' prefix_format='+%s (%s)' %}\r\n                    </small>\r\n                </h4>\r\n            </div>\r\n</li>\r\n~~~~\r\n\r\n**phone\\_number\\_format** uses **PHONE\\_NUMBERS\\_FORMATS\\_BY\\_REGION**\r\nfrom settings.py to determine phone number format\r\n\r\nExample\r\n=======\r\n\r\n:\r\n\r\n'GE': { 'pattern': `'(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})'`, 'format': `'\\\\1\r\n\\\\2-\\\\3-\\\\4'`, 'prefix\\_format': '+%s (%s)'},\r\n\r\n-   'GE' : region code\r\n-   'pattern' : `'(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})'` is regex. this regex will split phone number in 4 groups:\r\n    :   -   3 digits\r\n        -   2 digits\r\n        -   2 digits\r\n        -   2 digits\r\n\r\n-   'format' : `'\\\\1 \\\\2-\\\\3-\\\\4'` numbers are groups mentioned above.\r\n    for example if you want to put last 2 digits in scopes you should\r\n    write `'\\\\1 \\\\2-\\\\3-(\\\\4)'` and result will be xxx xx-xx-(xx)\r\n-   'prefix\\_format' : '+%s (%s)' first \"%s\" is country code second\r\n    mobile operator or city code for example +995 (595) where 995 is my\r\n    country code and 595 my mobile operator's code you can change\r\n    formatting fore example '[%s] [%s]' will give [995] [595] this\r\n    result\r\n\r\nwith this simple tag you can specify format inline\r\n\r\n~~~~ {.sourceCode .python}\r\n{% phone_number number.phone_number pattern='(\\\\d{3})(\\\\d{3})(\\\\d{3})' number_format='\\\\1 \\\\2-\\\\3' prefix_format='+%s (%s)' %}\r\n~~~~","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}